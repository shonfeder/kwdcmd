# Adapted form https://github.com/avsm/hello-world-action-ocaml/blob/master/.github/workflows/workflow.yml
name: build

on:
  pull_request:
  push:
    branches: master

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        ocaml-version:
          - 4.11.x
          # - 4.10.1
          # - 4.09.1
          # - 4.08.1

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: actions-ml/setup-ocaml@master
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
          dune-cache: true
          opam-disable-sandboxing: true

      - run: opam install . --deps-only --with-doc --with-test

      - run: opam exec -- dune build

      - run: opam exec -- dune runtest

  lint-doc:
    strategy:
      matrix:
        ocaml-version:
          - 4.11.x

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: actions-ml/setup-ocaml@master
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
          dune-cache: true
          lint-doc: true
          opam-disable-sandboxing: true

      - run: opam install . --deps-only --with-doc

  lint-fmt:
    strategy:
      matrix:
        ocaml-version:
          - 4.11.x

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: actions-ml/setup-ocaml@master
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
          dune-cache: true
          lint-fmt: true
          opam-disable-sandboxing: true

  lint-opam:
    strategy:
      matrix:
        ocaml-version:
          - 4.11.x

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: actions-ml/setup-ocaml@master
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
          dune-cache: true
          lint-opam: true
          opam-disable-sandboxing: true
